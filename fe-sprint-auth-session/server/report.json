{
  "stats": {
    "suites": 5,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-13T06:36:01.600Z",
    "end": "2022-09-13T06:36:01.692Z",
    "duration": 92
  },
  "tests": [
    {
      "title": "🚩 HTTPS 프로토콜을 사용하는 서버여야 합니다.",
      "fullTitle": "Auth - Server Protocol - HTTP over Secure 🚩 HTTPS 프로토콜을 사용하는 서버여야 합니다.",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 db에 존재하는 유저가 아니라면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "fullTitle": "Auth - Server POST /login 🚩 db에 존재하는 유저가 아니라면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그인에 성공했다면 /userinfo로 리다이렉트 되어야 합니다.",
      "fullTitle": "Auth - Server POST /login 🚩 로그인에 성공했다면 /userinfo로 리다이렉트 되어야 합니다.",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그인 상태를 일시적으로 유지하는 요청이라면 Session Cookie로 세션 아이디를 보내야합니다.",
      "fullTitle": "Auth - Server POST /login 🚩 로그인 상태를 일시적으로 유지하는 요청이라면 Session Cookie로 세션 아이디를 보내야합니다.",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그인 상태를 유지하는 요청이라면 Session Cookie가 아닌 Persistent Cookie로 세션 아이디를 보내야합니다.",
      "fullTitle": "Auth - Server POST /login 🚩 로그인 상태를 유지하는 요청이라면 Session Cookie가 아닌 Persistent Cookie로 세션 아이디를 보내야합니다.",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 쿠키에 세션 아이디(connect.sid)가 없다면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "fullTitle": "GET /userinfo 🚩 쿠키에 세션 아이디(connect.sid)가 없다면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 쿠키에 저장된 세션 아이디(connect.sid)가 세션 객체와 일치하지 않는다면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "fullTitle": "GET /userinfo 🚩 쿠키에 저장된 세션 아이디(connect.sid)가 세션 객체와 일치하지 않는다면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 쿠키에 저장된 세션 아이디(connect.sid)가 세션 객체와 일치한다면, 유저정보가 응답에 포함되어야 합니다.",
      "fullTitle": "GET /userinfo 🚩 쿠키에 저장된 세션 아이디(connect.sid)가 세션 객체와 일치한다면, 유저정보가 응답에 포함되어야 합니다.",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그아웃 요청 시 205 상태코드로 응답해야 합니다.",
      "fullTitle": "POST /logout 🚩 로그아웃 요청 시 205 상태코드로 응답해야 합니다.",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그아웃 후 유저정보를 요청한다면, 상태 코드 401이 응답에 포함되어야 합니다.",
      "fullTitle": "POST /logout 🚩 로그아웃 후 유저정보를 요청한다면, 상태 코드 401이 응답에 포함되어야 합니다.",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [],
  "passes": [
    {
      "title": "🚩 HTTPS 프로토콜을 사용하는 서버여야 합니다.",
      "fullTitle": "Auth - Server Protocol - HTTP over Secure 🚩 HTTPS 프로토콜을 사용하는 서버여야 합니다.",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 db에 존재하는 유저가 아니라면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "fullTitle": "Auth - Server POST /login 🚩 db에 존재하는 유저가 아니라면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그인에 성공했다면 /userinfo로 리다이렉트 되어야 합니다.",
      "fullTitle": "Auth - Server POST /login 🚩 로그인에 성공했다면 /userinfo로 리다이렉트 되어야 합니다.",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그인 상태를 일시적으로 유지하는 요청이라면 Session Cookie로 세션 아이디를 보내야합니다.",
      "fullTitle": "Auth - Server POST /login 🚩 로그인 상태를 일시적으로 유지하는 요청이라면 Session Cookie로 세션 아이디를 보내야합니다.",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그인 상태를 유지하는 요청이라면 Session Cookie가 아닌 Persistent Cookie로 세션 아이디를 보내야합니다.",
      "fullTitle": "Auth - Server POST /login 🚩 로그인 상태를 유지하는 요청이라면 Session Cookie가 아닌 Persistent Cookie로 세션 아이디를 보내야합니다.",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 쿠키에 세션 아이디(connect.sid)가 없다면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "fullTitle": "GET /userinfo 🚩 쿠키에 세션 아이디(connect.sid)가 없다면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 쿠키에 저장된 세션 아이디(connect.sid)가 세션 객체와 일치하지 않는다면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "fullTitle": "GET /userinfo 🚩 쿠키에 저장된 세션 아이디(connect.sid)가 세션 객체와 일치하지 않는다면, 상태 코드 401와 함께 Not Authorized라는 메세지가 응답에 포함되어야 합니다.",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 쿠키에 저장된 세션 아이디(connect.sid)가 세션 객체와 일치한다면, 유저정보가 응답에 포함되어야 합니다.",
      "fullTitle": "GET /userinfo 🚩 쿠키에 저장된 세션 아이디(connect.sid)가 세션 객체와 일치한다면, 유저정보가 응답에 포함되어야 합니다.",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그아웃 요청 시 205 상태코드로 응답해야 합니다.",
      "fullTitle": "POST /logout 🚩 로그아웃 요청 시 205 상태코드로 응답해야 합니다.",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "🚩 로그아웃 후 유저정보를 요청한다면, 상태 코드 401이 응답에 포함되어야 합니다.",
      "fullTitle": "POST /logout 🚩 로그아웃 후 유저정보를 요청한다면, 상태 코드 401이 응답에 포함되어야 합니다.",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    }
  ]
}